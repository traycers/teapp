name: building
on:
  push:
    branches:
      - main
env:
  artifacts_name_windows: "windows_msvc.zip"
  artifacts_name_ubuntu: "ubuntu_clang.zip"

jobs:
  windows_building:
    name: "Windows latest, msvc"
    runs-on: windows-latest
    env:
      generators: "Visual Studio 16 2019"
      archiver: "7z a"
      artifact: ${{ env.artifacts_name_windows }}
      build_type: "Release"
      cc: "cl"
      cxx: "cl"

    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add msbuild to PATH
        # uses: microsoft/setup-msbuild@v1.0.2
        uses: microsoft/setup-msbuild@v1

      - name: Install dependencies
        run: |
          pip3 install conan
          choco install cmake

      - name: Configure
        shell: bash
        run: |
          cmake --version
          conan --version
          python --version
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ env.build_type }} \
            -G "${{ env.generators }}"

      - name: Build
        shell: bash
        run: |
          cmake --build build --config ${{ env.build_type }}

      - name: Pack
        id: pack_artifacts
        shell: bash
        working-directory: ./build/teapp/bin/
        run: |
          ${{ env.archiver }} ${{ env.artifact }} .

      - name: Release artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows_artifacts
          path: ${{ env.artifacts_name_windows }}

      # - name: Create a GitHub release
      #   uses: actions/create-release@v1
      #   id: create_release
      #   env:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.tag_version.outputs.new_tag }}
      #     release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      #     body: ${{ steps.tag_version.outputs.changelog }}
      #     draft: false
      #     prerelease: false
      # - name: Upload release asset
      #   # if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./build/teapp/bin/${{ matrix.config.artifact }}
      #     asset_name: ${{ matrix.config.artifact }}
      #     asset_content_type: application/zip
