name: building
on: [push]
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows latest MSVC",
              os: windows-latest,
              artifact: "windows_msvc.7z",
              build_type: "Release",
              cc: "cl",
              cxx: "cl",
              environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
              archiver: "7z a",
              generators: "Visual Studio 16 2019",
            }
          - {
              name: "Ubuntu latest clang",
              os: ubuntu-latest,
              artifact: "ubuntu_gcc.7z",
              build_type: "Release",
              cc: "clang",
              cxx: "clang++",
              archiver: "7z a",
              generators: "Ninja",
            }
      steps:
        - uses: actions/checkout@v2
        - name: Install dependencies on windows
          if: startsWith(matrix.config.os, 'windows')
          run: |
            choco install ninja cmake
            ninja --version
            cmake --version
        - name: Install dependencies on ubuntu
          if: startsWith(matrix.config.name, 'Ubuntu Latest GCC')
          run: |
            sudo apt update
            sudo apt install ninja-build cmake
            sudo apt install clang-11 --install-suggests
            ninja --version
            cmake --version
            clang++ --version
        - name: Configure
          shell: bash
          run: |
            mkdir build
            cmake \
              -S . \
              -B build \
              -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
              -G "${{ matrix.config.generators }}"
        - name: Build
          shell: bash
          run: cmake --build build --config ${{ matrix.config.build_type }}
