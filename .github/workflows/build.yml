name: building
on: [push]
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows latest MSVC",
              os: windows-latest,
              artifact: "windows_msvc.7z",
              build_type: "Release",
              cc: "cl",
              cxx: "cl",
              environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
              archiver: "7z a",
              generators: "Visual Studio 16 2019",
            }
          - {
              name: "Ubuntu latest clang",
              os: ubuntu-latest,
              artifact: "ubuntu_clang.7z",
              build_type: "Release",
              cc: "clang",
              cxx: "clang++",
              archiver: "7z a",
              generators: "Unix Makefiles",
            }
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          pip3 install conan
          choco install cmake
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu Latest clang')
        # sudo apt install clang-11 --install-suggests
        run: |
          sudo apt update
          sudo apt install cmake
          sudo apt install python3.9-dev
          pip3 install conan
      - name: Configure
        shell: bash
        run: |
          cmake --version
          conan --version
          python --version
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}"
      - name: Build
        shell: bash
        run: |
          cmake --build build --config ${{ matrix.config.build_type }}
          ls -al
      # - name: Install Strip
      #   shell: bash
      #   run: cmake --install .
      - name: Pack
        shell: bash
        working-directory: ./build/teapp/${{ matrix.config.build_type }}
        # working-directory: artifacts/${{ matrix.config.build_type }}
        run: |
          ls -al
          ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} .
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.config.artifact }}
          asset_name: ${{ matrix.config.artifact }}.zip
          asset_content_type: application/zip
